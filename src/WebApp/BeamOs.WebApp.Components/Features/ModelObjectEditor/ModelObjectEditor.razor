@inherits FluxorComponent

@using BeamOs.StructuralAnalysis.Contracts.PhysicalModel.Node
@using BeamOs.WebApp.Components.Features.ModelObjectEditor.Materials
@using BeamOs.WebApp.Components.Features.ModelObjectEditor.Members
@using BeamOs.WebApp.Components.Features.ModelObjectEditor.Nodes
@using BeamOs.WebApp.Components.Features.ModelObjectEditor.SectionProfiles
@using BeamOs.WebApp.Components.Features.ModelObjectEditor.PointLoads
@using BeamOs.WebApp.Components.Features.ModelObjectEditor.MomentLoads
@using StructuralAnalysis.Contracts.Common;

@if (state.Value.CurrentViewType == BeamOsObjectType.Model)
{
    <div class="p-4">
        <!-- Model Section -->
        <div class="mb-10">
            <MudText Align="Align.Center" Color="Color.Primary">MODEL</MudText>
            <MudDivider Class="mb-5" />
            <div class="grid grid-cols-2 gap-2">
                <MudButton Variant="Variant.Outlined" OnClick="() => ShowView(BeamOsObjectType.Node)">Nodes</MudButton>
                <MudButton Variant="Variant.Outlined" OnClick="() => ShowView(BeamOsObjectType.Element1d)">Members</MudButton>
                @* <MudButton Variant="Variant.Outlined">Plates</MudButton> *@
                @* <MudButton Variant="Variant.Outlined">Supports</MudButton> *@
                <MudButton Variant="Variant.Outlined" OnClick="() => ShowView(BeamOsObjectType.Material)">Materials</MudButton>
                <MudButton Variant="Variant.Outlined" OnClick="() => ShowView(BeamOsObjectType.SectionProfile)">Sections</MudButton>
            </div>
        </div>

        <!-- Loads Section -->
        <div class="mb-10">
            <MudText Align="Align.Center" Color="Color.Primary">LOADS</MudText>
            <MudDivider Class="mb-5" />
            <div class="grid grid-cols-2 gap-2">
                <MudButton Variant="Variant.Outlined" OnClick="() => ShowView(BeamOsObjectType.PointLoad)">Point Loads</MudButton>
                <MudButton Variant="Variant.Outlined" OnClick="() => ShowView(BeamOsObjectType.MomentLoad)">Moments</MudButton>
            </div>
    @*         <div class="mt-2">
                <MudButton Variant="Variant.Outlined" Class="w-full">Distributed Loads</MudButton>
            </div>
            <div class="grid grid-cols-2 gap-2 mt-2">
                <MudButton Variant="Variant.Outlined">Area Loads</MudButton>
                <MudButton Variant="Variant.Outlined">Pressures</MudButton>
            </div>
            <div class="grid grid-cols-2 gap-2 mt-2">
                <MudButton Variant="Variant.Outlined">Self Weight</MudButton>
                <MudButton Variant="Variant.Outlined">Load Combos</MudButton>
            </div> *@
        </div>

        @* <div>
            <div class="text-sm uppercase text-secondary mb-2">Dynamic Loads</div>
            <div class="grid grid-cols-2 gap-2">
                <MudButton Variant="Variant.Outlined">Nodal Masses</MudButton>
                <MudButton Variant="Variant.Outlined">Spectral Loads</MudButton>
            </div>
        </div> *@
    </div>
}
else
{
    <MudTooltip Text="Back">
        <MudIconButton Icon="@Icons.Material.Filled.ArrowBack" OnClick="GoBack"></MudIconButton>
    </MudTooltip>

    if (state.Value.CurrentViewType == BeamOsObjectType.Node)
    {
        <NodeObjectEditor ModelId="@ModelId" UnitSettings="@UnitSettings" SelectedObject="state.Value.SelectedObject" />
    }
    else if (state.Value.CurrentViewType == BeamOsObjectType.Element1d)
    {
        <MemberObjectEditor ModelId="@ModelId" UnitSettings="@UnitSettings" SelectedObject="state.Value.SelectedObject" />
    }
    else if (state.Value.CurrentViewType == BeamOsObjectType.Material)
    {
        <MaterialObjectEditor ModelId="@ModelId" UnitSettings="@UnitSettings" SelectedObject="state.Value.SelectedObject" />
    }
    else if (state.Value.CurrentViewType == BeamOsObjectType.SectionProfile)
    {
        <SectionProfileObjectEditor ModelId="@ModelId" UnitSettings="@UnitSettings" SelectedObject="state.Value.SelectedObject" />
    }
    else if (state.Value.CurrentViewType == BeamOsObjectType.PointLoad)
    {
        <PointLoadObjectEditor ModelId="@ModelId" UnitSettings="@UnitSettings" SelectedObject="state.Value.SelectedObject" />
    }
    else if (state.Value.CurrentViewType == BeamOsObjectType.MomentLoad)
    {
        <MomentLoadObjectEditor ModelId="@ModelId" UnitSettings="@UnitSettings" SelectedObject="state.Value.SelectedObject" />
    }
}
