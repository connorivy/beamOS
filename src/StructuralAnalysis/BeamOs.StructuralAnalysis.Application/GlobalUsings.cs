global using Angle = UnitsNet.Angle;
global using AngleContract = BeamOs.StructuralAnalysis.Contracts.Common.Angle;
global using AngleUnit = UnitsNet.Units.AngleUnit;
global using AngleUnitContract = BeamOs.StructuralAnalysis.Contracts.Common.AngleUnit;
global using Area = UnitsNet.Area;
global using AreaContract = BeamOs.StructuralAnalysis.Contracts.Common.Area;
global using AreaMomentOfInertia = UnitsNet.AreaMomentOfInertia;
global using AreaMomentOfInertiaContract = BeamOs.StructuralAnalysis.Contracts.Common.AreaMomentOfInertia;
global using AreaMomentOfInertiaUnit = UnitsNet.Units.AreaMomentOfInertiaUnit;
global using AreaMomentOfInertiaUnitContract = BeamOs.StructuralAnalysis.Contracts.Common.AreaMomentOfInertiaUnit;
global using AreaUnit = UnitsNet.Units.AreaUnit;
global using AreaUnitContract = BeamOs.StructuralAnalysis.Contracts.Common.AreaUnit;
global using Element1dProposal = BeamOs.StructuralAnalysis.Domain.PhysicalModel.Element1dAggregate.Element1dProposal;
global using Element1dProposalContract = BeamOs.StructuralAnalysis.Contracts.PhysicalModel.Element1ds.Element1dProposalBase;
global using Force = UnitsNet.Force;
global using ForceContract = BeamOs.StructuralAnalysis.Contracts.Common.Force;
global using ForcePerLength = UnitsNet.ForcePerLength;
global using ForcePerLengthContract = BeamOs.StructuralAnalysis.Contracts.Common.ForcePerLength;
global using ForcePerLengthUnit = UnitsNet.Units.ForcePerLengthUnit;
global using ForcePerLengthUnitContract = BeamOs.StructuralAnalysis.Contracts.Common.ForcePerLengthUnit;
global using ForceUnit = UnitsNet.Units.ForceUnit;
global using ForceUnitContract = BeamOs.StructuralAnalysis.Contracts.Common.ForceUnit;
global using Length = UnitsNet.Length;
global using LengthContract = BeamOs.StructuralAnalysis.Contracts.Common.Length;
global using LengthUnit = UnitsNet.Units.LengthUnit;
global using LengthUnitContract = BeamOs.StructuralAnalysis.Contracts.Common.LengthUnit;
global using LoadCase = BeamOs.StructuralAnalysis.Domain.PhysicalModel.LoadCases.LoadCase;
global using LoadCaseContract = BeamOs.StructuralAnalysis.Contracts.PhysicalModel.LoadCases.LoadCase;
global using LoadCombination = BeamOs.StructuralAnalysis.Domain.PhysicalModel.LoadCombinations.LoadCombination;
global using LoadCombinationContract = BeamOs.StructuralAnalysis.Contracts.PhysicalModel.LoadCombinations.LoadCombination;
global using Model = BeamOs.StructuralAnalysis.Domain.PhysicalModel.ModelAggregate.Model;
global using ModelProposal = BeamOs.StructuralAnalysis.Domain.PhysicalModel.ModelAggregate.ModelProposal;
global using ModelProposalContract = BeamOs.StructuralAnalysis.Contracts.PhysicalModel.Models.ModelProposal;
global using MomentLoad = BeamOs.StructuralAnalysis.Domain.PhysicalModel.MomentLoadAggregate.MomentLoad;
global using MomentLoadContract = BeamOs.StructuralAnalysis.Contracts.PhysicalModel.MomentLoads.MomentLoad;
global using PointLoad = BeamOs.StructuralAnalysis.Domain.PhysicalModel.PointLoadAggregate.PointLoad;
global using PointLoadContract = BeamOs.StructuralAnalysis.Contracts.PhysicalModel.PointLoads.PointLoad;
global using Pressure = UnitsNet.Pressure;
global using PressureContract = BeamOs.StructuralAnalysis.Contracts.Common.Pressure;
global using PressureUnit = UnitsNet.Units.PressureUnit;
global using PressureUnitContract = BeamOs.StructuralAnalysis.Contracts.Common.PressureUnit;
global using ProposalIssue = BeamOs.StructuralAnalysis.Domain.PhysicalModel.ModelAggregate.ProposalIssue;
global using ProposalIssueContract = BeamOs.StructuralAnalysis.Contracts.PhysicalModel.Models.ProposalIssue;
global using ResultSet = BeamOs.StructuralAnalysis.Domain.AnalyticalResults.ResultSetAggregate.ResultSet;
global using ResultSetContract = BeamOs.StructuralAnalysis.Contracts.AnalyticalResults.ResultSet;
global using SectionProfileFromLibrary = BeamOs.StructuralAnalysis.Domain.PhysicalModel.SectionProfileAggregate.SectionProfileFromLibrary;
global using SectionProfileFromLibraryContract = BeamOs.StructuralAnalysis.Contracts.PhysicalModel.SectionProfiles.SectionProfileFromLibrary;
global using Torque = UnitsNet.Torque;
global using TorqueContract = BeamOs.StructuralAnalysis.Contracts.Common.Torque;
global using TorqueUnit = UnitsNet.Units.TorqueUnit;
global using TorqueUnitContract = BeamOs.StructuralAnalysis.Contracts.Common.TorqueUnit;
global using UnitSettings = BeamOs.StructuralAnalysis.Domain.PhysicalModel.ModelAggregate.UnitSettings;
global using UnitSettingsContract = BeamOs.StructuralAnalysis.Contracts.Common.UnitSettings;
global using Volume = UnitsNet.Volume;
global using VolumeContract = BeamOs.StructuralAnalysis.Contracts.Common.Volume;
global using VolumeUnit = UnitsNet.Units.VolumeUnit;
global using VolumeUnitContract = BeamOs.StructuralAnalysis.Contracts.Common.VolumeUnit;
