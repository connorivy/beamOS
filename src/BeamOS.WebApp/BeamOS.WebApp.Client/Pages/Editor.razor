@page "/editor"
@using BeamOS.PhysicalModel.Contracts.Model
@using BeamOS.PhysicalModel.Contracts.Node
@rendermode InteractiveAuto

@inject IJSRuntime js

<PageTitle>Editor</PageTitle>

<canvas id="editor" style="height: 600px; width: 100%;"></canvas>

<button @onclick="AddNode">
    Add Node
</button>

<button @onclick="LoadModel">
    Load Model
</button>

<button @onclick="SayHello">
    Say Hello
</button>

@code {
    ElementReference editorReference;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await js.InvokeVoidAsync("createFromId", "editor");
        }
        await base.OnAfterRenderAsync(firstRender);
    }

    private async Task AddNode()
    {
        CreateNodeRequest y = new(
            "00000000-0000-0000-0000-000000000000",
            10,
            10,
            10,
            "Foot");
        // NodeResponse? x = await physicalModelClient.CreateNodeAsync(y);
        
        await js.InvokeVoidAsync("beamOsEditor.api.createNode", y);
    }

    private async Task LoadModel()
    {
        // ModelResponse response = await physicalModelClient.GetApiModelsAsync("00000000-0000-0000-0000-000000000000", null);
        // foreach (NodeResponse? nodeResponse in response.Nodes)
        // {
        //     await js.InvokeVoidAsync("beamOsEditor.commands.addNodeCommand", nodeResponse);
        // }
        ;
    }

    private async Task LoadEditor()
    {
    }

    private async Task SayHello()
    {
        await js.InvokeVoidAsync("beamOsEditor.sayHello");
    }
}
