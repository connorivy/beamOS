@page "/editor"
@using BeamOS.PhysicalModel.Client
@using BeamOS.PhysicalModel.Contracts.Element1D
@using BeamOS.PhysicalModel.Contracts.Model
@using BeamOS.PhysicalModel.Contracts.Node
@using BeamOS.WebApp.EditorApi
@rendermode InteractiveServer

@inject IJSRuntime js
@inject IPhysicalModelAlphaClient apiClient
@inject IEditorApiAlpha editorApiAlpha

<PageTitle>Editor</PageTitle>

<canvas id="editor" style="height: 600px; width: 100%;"></canvas>

<button @onclick="AddNode">
    Add Node
</button>

<button @onclick="Solve">
    Solve
</button>

@code {
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await js.InvokeVoidAsync("createFromId", "editor");
        }
        await LoadModel();
        await base.OnAfterRenderAsync(firstRender);
    }

    private async Task AddNode()
    {
        // Trace.WriteLine("AddNode");
        CreateNodeRequest request = new(
            "00000000-0000-0000-0000-000000000000",
            10,
            5,
            10,
            "Foot");

        NodeResponse response = await apiClient.CreateNodeAsync(request);
        var x = await editorApiAlpha.CreateNodeAsync(response);
    }

    private async Task LoadModel()
    {
        ModelResponseHydrated response = await apiClient.GetModelHydratedAsync("00000000-0000-0000-0000-000000000000");
        var x = await editorApiAlpha.CreateModelHydratedAsync(response);
    }

    private async Task Solve()
    {
        
    }
}

