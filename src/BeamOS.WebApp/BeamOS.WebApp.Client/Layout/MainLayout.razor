@inherits LayoutComponentBase

<MudThemeProvider @rendermode="InteractiveAuto"
                  Theme="@_baseTheme"
                  IsDarkMode="@IsDarkMode" />
<MudPopoverProvider />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <NavBar @bind-IsDarkMode="@IsDarkMode" />
    <MudDrawer @bind-Open="@Open" Elevation="1" ClipMode="DrawerClipMode.Always">
        <NavMenu />
    </MudDrawer>
    <MudMainContent Class="h-full">
        <MudContainer MaxWidth="MaxWidth.False" Gutters="false" Class="h-full">
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>

<div id="blazor-error-ui">
    An unhandled error has occurred.
    <a href="" class="reload">Reload</a>
    <a class="dismiss">ðŸ—™</a>
</div>

@code {
    private string inputValue = "initial";
    private bool open = true;
    public bool Open
    {
        get => open;
        set
        {
            Console.WriteLine($"isDarkMode layout value {value}");
            open = value;
            this.StateHasChanged();
        }
    }

    private bool isDarkMode = true;
    public bool IsDarkMode
    {
        get => isDarkMode;
        set
        {
            Console.WriteLine($"isDarkMode layout value {value}");
            isDarkMode = value;
            this.StateHasChanged();
        }
    }

    private bool isDarkMode2 = true;
    public bool IsDarkMode2
    {
        get => isDarkMode2;
        set
        {
            Console.WriteLine($"isDarkMode layout value {value}");
            isDarkMode2 = value;
            this.StateHasChanged();
        }
    }
    //public bool IsDarkMode { get; set; }

    private MudThemeProvider _mudThemeProvider;
    private MudTheme _baseTheme = new();

    protected override Task OnAfterRenderAsync(bool firstRender)
    {
        return base.OnAfterRenderAsync(firstRender);
    }
}
