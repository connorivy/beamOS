@using Microsoft.Extensions.Configuration
@using BeamOS.WebApp.Client
@inject IConfiguration Configuration

<Fluxor.Blazor.Web.StoreInitializer />

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <base href="/" />
    @* <link rel="stylesheet" href="css/tailwind.css" /> *@
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="stylesheet" href=@($"{Configuration[Constants.ASSEMBLY_NAME]}.styles.css") />
    <link href="_content/MudBlazor/MudBlazor.min.css" rel="stylesheet" />
    <link href="_content/CodeBeam.MudBlazor.Extensions/MudExtensions.min.css" rel="stylesheet" />

    @* Highlight.js *@
    @* todo: npm install instead *@
    @* <link rel="stylesheet" href="https://cdn.jsdelivr.net/gh/highlightjs/cdn-release@11.9.0/build/styles/atom-one-dark.min.css">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.9.0/highlight.min.js" defer></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.9.0/languages/csharp.min.js" defer></script>
    <script>hljs.highlightAll();</script> *@

    @* https://github.com/MudBlazor/MudBlazor/issues/7805 *@
    <HeadOutlet @rendermode="InteractiveWebAssembly" />
</head>

<body class="h-screen">
    <Routes @rendermode="InteractiveWebAssembly" />
    <script src="_content/MudBlazor/MudBlazor.min.js"></script>
    <script src="_content/CodeBeam.MudBlazor.Extensions/MudExtensions.min.js"></script>
    <script src="_framework/blazor.web.js"></script>
    <script src="js/index.bundle.js"></script>
    <environment names="Development">
        <script src="/_framework/aspnetcore-browser-refresh.js"></script>
    </environment>

    @if (Configuration[Constants.EDITOR_USE_SERVED_CONFIG_NAME] == "True")
    {
        <script type="module">
            import { BeamOsEditor } from 'http://localhost:@Configuration[Constants.EDITOR_PORT_CONFIG_NAME]/lib/main.ts';

            // WARNING : the string "createEditorFromId" must match the string in EditorApiProxy.cs
            window.createEditorFromId = (editorId, dispatcher) => {
                return BeamOsEditor.createFromId(editorId, dispatcher)
            }
        </script>
    }
    else
    {
        <script src="js/index.bundle.js"></script>
    }
</body>

</html>
