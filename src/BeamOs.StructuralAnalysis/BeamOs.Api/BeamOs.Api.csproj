<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <Nullable>enable</Nullable>
    <ImplicitUsings>enable</ImplicitUsings>
    <IsPackable>true</IsPackable>
  </PropertyGroup>

  <ItemGroup>
    <Content Remove="Common\tailwind.extension.json" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="FastEndpoints" />
    <PackageReference Include="FastEndpoints.ClientGen" />
    <PackageReference Include="FastEndpoints.Security" />
    <PackageReference Include="FastEndpoints.Swagger" />
    <PackageReference Include="Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore" />
    <PackageReference Include="Microsoft.AspNetCore.OpenApi" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Design">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.Extensions.DependencyInjection" />
    <PackageReference Include="OpenTelemetry.Extensions.Hosting" />
  </ItemGroup>

  <ItemGroup>
    <None Include="Common\tailwind.extension.json" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\..\..\codeGen\Apis\BeamOs.CodeGen.Apis.StructuralAnalysisApi\BeamOs.CodeGen.Apis.StructuralAnalysisApi.csproj" />
    <ProjectReference Include="..\..\BeamOs.Common\BeamOs.Common.Api\BeamOs.Common.Api.csproj" />
    <ProjectReference Include="..\..\BeamOs.Common\BeamOs.Common.Identity\BeamOs.Common.Identity.csproj" />
    <ProjectReference Include="..\BeamOs.Application\BeamOs.Application.csproj" />
    <ProjectReference Include="..\BeamOs.Contracts\BeamOs.Contracts.csproj" />
    <ProjectReference Include="..\BeamOs.Infrastructure\BeamOs.Infrastructure.csproj" />
  </ItemGroup>

  <Target Name="CopyOpenSees" AfterTargets="AfterBuild" Condition="'$(ContinuousIntegrationBuild)' == false">
    <!-- /y will surpress prompt to override existing files -->
    <!-- /s will copy subdirectories unless they are empty-->
    <Exec Condition="Exists('$(SolutionDir)openSees\bin\')" Command="xcopy /y /s $(SolutionDir)openSees\bin\** $(OutDir)bin\" />
    <Exec Condition="Exists('$(SolutionDir)openSees\lib\')" Command="xcopy /y /s $(SolutionDir)openSees\lib\** $(OutDir)lib\" />
  </Target>

</Project>
