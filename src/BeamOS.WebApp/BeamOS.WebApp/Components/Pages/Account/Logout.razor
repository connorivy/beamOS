@page "/logout"
@layout FullScreenLayout

@inject NavigationManager NavigationManager
@inject ILocalStorageService localStorageService
@* @attribute [Authorize] *@

@* @rendermode render mode must be static (default value) *@
@rendermode @(new InteractiveServerRenderMode(prerender: false))

<div class="p-4">
    <h3>Logging out ...</h3>
</div>

@code {
    [SupplyParameterFromQuery]
    public string? ReturnUrl { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await ClearLocalStorage();

            UriHelper.FromAbsolute(NavigationManager.BaseUri, out string scheme, out HostString host, out _, out _, out _);
            IEnumerable<KeyValuePair<string, StringValues>> query =
            [
                new("ReturnUrl", ReturnUrl ?? "/")
            ];
            string navUrl = UriHelper.BuildAbsolute(
                scheme,
                host,
                path: new PathString("/logout-clear-cookies"),
                query: QueryString.Create(query));

            NavigationManager.NavigateTo(navUrl);
        }

        await base.OnAfterRenderAsync(firstRender);
    }

    private async Task ClearLocalStorage()
    {
        await localStorageService.RemoveItemAsync("Authorization");
    }
}
