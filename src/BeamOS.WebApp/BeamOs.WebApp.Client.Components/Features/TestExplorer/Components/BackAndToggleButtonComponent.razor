@* <MudCard Class="w-full pointer-events-auto"> *@
    <div class="flex flex-row pointer-events-auto">
        <MudTooltip Text="Back to All Example Problems">
            <MudIconButton Icon="@Icons.Material.Filled.ArrowBack" OnClick="GoBack"></MudIconButton>
        </MudTooltip>
        @* <MudTooltip Text="Toggle Problem Source Info">
            <MudSwitch @bind-Value="ShowProblemSource" ThumbIcon="@Icons.Material.Filled.Info" ThumbIconColor="Color.Info" Size="Size.Large"></MudSwitch>
        </MudTooltip>
        <MudTooltip Text="Toggle Test Selector">
            <MudSwitch @bind-Value="ShowTestSelector" ThumbIcon="@Icons.Material.Filled.Book" ThumbIconColor="Color.Info" Size="Size.Large"></MudSwitch>
        </MudTooltip>
        <MudTooltip Text="Toggle Test Results">
            <MudSwitch @bind-Value="ShowTestResults" ThumbIcon="@Icons.Material.Filled.CheckCircle" ThumbIconColor="Color.Info" Size="Size.Large"></MudSwitch>
        </MudTooltip> *@
    </div>
@* </MudCard> *@

@code {
    [Inject]
    private IDispatcher Dispatcher { get; init; }

    [Inject]
    private IState<TestExplorerState> TestExplorerState { get; init; }

    private void GoBack()
    {
        this.Dispatcher.Dispatch(new ChangeSelectedProblemTests(null));
    }

    private bool ShowProblemSource
    {
        get => this.TestExplorerState.Value.ShowProblemSource;
        set => this.Dispatcher.Dispatch(new ChangeShowProblemSource(value));
    }

    private bool ShowTestSelector
    {
        get => this.TestExplorerState.Value.ShowTestSelector;
        set => this.Dispatcher.Dispatch(new ChangeShowTestSelector(value));
    }

    private bool ShowTestResults
    {
        get => this.TestExplorerState.Value.ShowTestResults;
        set => this.Dispatcher.Dispatch(new ChangeShowTestResults(value));
    }
}
