@inherits LayoutComponentBase
@rendermode InteractiveAuto

@inject IDispatcher Dispatcher;
@inject IJSRuntime js;

<MudThemeProvider Theme="@_baseTheme"
                  IsDarkMode="@isDarkMode" />
<MudPopoverProvider />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <NavBar @bind-IsDarkMode="@isDarkMode" />
    @* <MudDrawer @bind-Open="@open" Elevation="1" ClipMode="DrawerClipMode.Always">
        <NavMenu />
    </MudDrawer> *@
    <MudMainContent Class="h-full">
        <MudContainer MaxWidth="MaxWidth.False" Gutters="false" Class="h-full">
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>

<div id="blazor-error-ui">
    An unhandled error has occurred.
    <a href="" class="reload">Reload</a>
    <a class="dismiss">ðŸ—™</a>
</div>

<script>
    function addKeyboardListenerEvents(dotnetRef) {
        window.document.addEventListener('keydown', (e) => onKeyDown(dotnetRef, e))
    }

    function onKeyDown(dotnetRef, e) {
        dotnetRef.invokeMethodAsync('OnKeyDown', e)
    }
</script>

@code {
    private string inputValue = "initial";
    private bool open = false;

    private bool isDarkMode = true;
    private MudThemeProvider _mudThemeProvider;
    private MudTheme _baseTheme = new();

    private DotNetObjectReference<MainLayout>? mainLayoutDotnetRef;

    protected override void OnInitialized()
    {
        mainLayoutDotnetRef = DotNetObjectReference.Create(this);
        base.OnInitialized();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await js.InvokeVoidAsync("addKeyboardListenerEvents", mainLayoutDotnetRef);
        }
        await base.OnAfterRenderAsync(firstRender);
    }

    [JSInvokable]
    public Task OnKeyDown(KeyboardEventArgs e)
    {
        Dispatcher.Dispatch(e);

        return Task.CompletedTask;
    }
}
