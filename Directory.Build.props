<?xml version="1.0" encoding="utf-8"?>
<Project>
  <Import Project="BeamOs.user.props" Condition="Exists('BeamOs.user.props')" />
  <PropertyGroup Label="General Config">
    <BeamOsTargetFramework Condition="'$(BeamOsTargetFramework)' == ''">net10.0</BeamOsTargetFramework>
    <TargetFramework>$(BeamOsTargetFramework)</TargetFramework>
    <LangVersion>preview</LangVersion>
    <OpenSeesDir Condition="'$(OpenSeesDir)' == ''">$(MSBuildThisFileDirectory)openSees\OpenSees3.7.0\</OpenSeesDir>
    <ContinuousIntegrationEnv Condition="'$(ContinuousIntegrationEnv)' == ''">false</ContinuousIntegrationEnv>
    <ManagePackageVersionsCentrally>true</ManagePackageVersionsCentrally>
    <CentralPackageTransitivePinningEnabled>false</CentralPackageTransitivePinningEnabled>
    <IsPackable>false</IsPackable>
    <IncludeOpenSeesExe Condition="'$(IncludeOpenSeesExe)' == ''">true</IncludeOpenSeesExe>
    <BeamOsRoot>$(MSBuildThisFileDirectory)</BeamOsRoot>
    
    <TUnitImplicitUsings>false</TUnitImplicitUsings>
    <DefineConstants Condition="'$(CODEGEN)' == 'true'">$(DefineConstants);CODEGEN</DefineConstants>
    <LocalNugetFeed>/workspaces/beamOS/.nuget-local</LocalNugetFeed>
    <BeamOsEnableAot Condition="'$(BeamOsEnableAot)' == ''">false</BeamOsEnableAot>
    <BeamOsUsePostgres>false</BeamOsUsePostgres>
    <BeamOsUseSqlite>true</BeamOsUseSqlite>
    <!-- <PropertyGroup Condition="'$(CODEGEN)' == 'true'">
      <DefineConstants>$(DefineConstants);CODEGEN</DefineConstants>
    </PropertyGroup> -->

    <!--<InvariantGlobalization>true</InvariantGlobalization>-->
    <NoWarn>
      CA1707; <!-- Remove the underscores from method name -->
      CA1725; <!--Parameter names should match base declaration-->
      IDE0007; <!-- Use var instead of explicit type -->

      IDE0021;
      IDE0022;
      IDE0023;
      IDE0024;

      IDE0051;
      IDE0100; <!-- IDE0100: Ignore redundant equality -->
      $(NoWarn)
    </NoWarn>

    <WarningsNotAsErrors>
      <!-- TODO: we need to get rid of pretty much all of these -->

      RMG012; <!-- Riok.Mapperly: The member 'PROPERTY' on the mapping target type 'TYPE' was not found on the mapping source type 'TYPE' -->
      RMG020; <!-- Riok.Mapperly: The member 'PROPERTY' on the mapping source type 'TYPE' is not mapped to any member on the mapping target type 'TYPE' -->
      RMG037; <!-- Enum member 'PROPERTY' on 'TYPE' not found on source enum 'TYPE' -->
      RMG038; <!-- Enum member 'PROPERTY' on 'TYPE' not found on target enum 'TYPE' -->
      
      <!-- TODO: THIS IS DEFINITELY LEADING TO BUGS -->
      RMG066; <!-- No members are mapped -->

      CA1305; <!-- Specify IFormatProvider -->
      CA1000; <!-- Do not declare static members on generic types -->
      CA1707; <!-- Identifiers should not contain underscores -->
      CA1710; <!-- Rename type 'TYPE' to end in 'Collection' because it implements 'INTERFACE' -->
      CA1716; <!-- Rename virtual/interface member 'NAME' to avoid conflicts with keywords -->
      CA1725; <!-- Parameter names should match base declaration -->
      CA1727; <!-- Use PascalCase for named placeholders -->
      CA1822; <!-- Member 'METHOD' does not access instance data and can be marked as static -->
      CA1852; <!-- Seal internal types -->
      CA1861; <!-- Prefer 'static readonly' fields over const array arguments -->
      CA1848; <!-- For improved performance, use the LoggerMessage delegates -->
      CA1873; <!-- Evaluation of this argument may be expensive. -->
      CA2016; <!-- Forward the 'CancellationToken' parameter to methods that take one -->
      CA2201; <!-- Exception type System.Exception is not sufficiently specific. -->
      CA2208; <!-- Method 'METHOD' passes 'PARAM' as the 'paramName' argument to ArgumentOutOfRangeException -->

      IDE0001; <!-- Name can be simplified -->
      IDE0005; <!-- Using directive is unnecessary -->
      IDE0009; <!-- Add this modifier -->
      IDE0055; <!-- Fix formatting -->
      IDE0052; <!-- Private field is never used -->
      IDE0060; <!-- Remove unused parameter -->
      IDE0290; <!-- Use primary ctor -->
      IDE1006; <!-- These words must begin with uppercase characters -->

      CS0108; <!-- Member hides inherited member; missing new keyword -->
      CS0168; <!-- Variable is declared but never used -->
      CS0436; <!-- Type conflicts with imported type -->
      CS0618; <!-- Operator is obsolete: for null checks, use 'is null' or 'is not null' -->
      CS1572; <!-- XML comment has a param tag, but there is no parameter by that name -->
      CS1573; <!-- Parameter has no matching param tag in the XML comment -->
      CS1998; <!-- This async method lacks 'await' operators and will run synchronously. Consider using the 'await' operator to await non-blocking API calls, or 'await Task.Run(...)' to do CPU-bound work on a background thread. -->
      CS8509; <!-- The switch expression does not handle all possible values of its input type (it is not exhaustive) -->
      CS8524; <!-- The switch expression is not exhaustive. -->
      CS8600; <!-- Converting null literal or possible null value to non-nullable type. -->
      CS8602; <!-- Dereference of a possibly null reference. -->
      CS8603; <!-- Possible null reference return. -->
      CS8604; <!-- Possible null reference argument for parameter 'PARAM' in 'METHOD'. -->
      CS8618; <!-- Non-nullable property 'PROPERTY' must contain a non-null value when exiting constructor. Consider declaring the property as nullable. -->
      CS8619; <!-- Nullability of reference types in value of type 'TYPE' doesn't match target type 'TYPE'. -->
      CS8620; <!-- Arguement of type 'TYPE' cannot be used for parameter 'PARAM' of type 'TYPE' in 'METHOD' due to differences in nullablility -->
      CS8625; <!-- Cannot convert null literal to non-nullable reference type. -->
      CS8629; <!-- Nullable value type may be null. -->
      CS9107; <!-- Parameter is captured into the state of the class -->
      CS9113; <!-- Parameter 'PARAM' is unread -->

      SYSLIB0014; <!-- Obsolete API usage: 'API': Use 'Alternative' instead. -->
    </WarningsNotAsErrors>

    <WarningsNotAsErrors Condition="'$(CODEGEN)' == 'true'">
      $(WarningsNotAsErrors);
      NU1903 <!-- package with a known vulnerability -->
    </WarningsNotAsErrors>
    
    <WarningsAsErrors>
      <!--Net6 default enabled analysers-->
      CA1416; CA1417; CA1418; CA1831; CA2013; CA2014; CA2015; CA2017;
      CA2018; CA2200; CA2252; CA2247; CA2255; CA2256; CA2257; CA2258;
      <!--Net7 default enabled analysers-->
      CA1420; CA1422; CA2259; CA2260;
      <!--Security analysers -->
      CA2100; CA2119; CA2153; CA2300; CA2301; CA2302; CA2305;
      CA2310; CA2311; CA2312; CA2315; CA2321; CA2322; CA2326; CA2327;
      CA2328; CA2329; CA2330; CA2350; CA2351; CA2352; CA2353; CA2354;
      CA2355; CA2356; CA2361; CA2362; CA3001; CA3002; CA3003; CA3004;
      CA3006; CA3007; CA3008; CA3009; CA3010; CA3011; CA3012; CA3061;
      CA3076; CA3077; CA3147; CA5350; CA5351; CA5358; CA5359;
      CA5360; CA5361; CA5362; CA5363; CA5364; CA5365; CA5366; CA5367;
      CA5368; CA5370; CA5371; CA5372; CA5373; CA5374; CA5375;
      CA5376; CA5377; CA5378; CA5379; CA5380; CA5381; CA5382; CA5383;
      CA5384; CA5385; CA5386; CA5387; CA5388; CA5389; CA5390; CA5391;
      CA5392; CA5393; CA5395; CA5396; CA5397; CA5398; CA5399;
      CA5400; CA5401; CA5402; CA5403; CA5404; CA5405
      <!-- The following security anaysers are ommited for the listed reasons -->
      <!--"CA5394: Do not use insecure randomness" - random number generators used for non cryptographic usecases-->
      <!--"CA2109: Review visible event handlers" - threat has not existed since net4.5-->
      <!--"CA3075: Insecure DTD Processing" - we assume loaded XML is trusted-->
      <!--"CA5369: Use XmlReader for Deserialize" - we assume loaded XML is trusted-->
    </WarningsAsErrors>
  </PropertyGroup>
</Project>
