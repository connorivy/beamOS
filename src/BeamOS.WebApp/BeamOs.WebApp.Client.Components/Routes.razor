@using BeamOs.Common.Identity
@using BeamOs.WebApp.Client.Components.Layout
@using BeamOs.WebApp.Client.Components.Pages.Account
@using System.Reflection

@inject Assembly AppAssembly;

<Fluxor.Blazor.Web.StoreInitializer />

<Router AppAssembly="@AppAssembly" AdditionalAssemblies="[typeof(BeamOs.WebApp.Client.Components._Imports).Assembly]">
    <Found Context="routeData">
        <AuthorizeRouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)">
            <NotAuthorized>
                <RedirectToLogin />
            </NotAuthorized>
            <Authorizing>
                Authorizing...
            </Authorizing>
        </AuthorizeRouteView>
        @* <FocusOnNavigate RouteData="@routeData" Selector="h1" /> *@
    </Found>
    <NotFound>
        this was not found!!!!
    </NotFound>
</Router>

@code {
    [Parameter]
    public string? AccessToken { get; init; }

    [Inject]
    private AuthenticationStateProvider AuthenticationStateProvider { get; init; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            if (AccessToken is not null)
            {
                await ((IAuthStateProvider)AuthenticationStateProvider).Login(AccessToken);
            }
        }
        await base.OnAfterRenderAsync(firstRender);
    }
}
