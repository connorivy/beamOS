@using Fluxor.Blazor.Web.Components
@inherits FluxorComponent

@if (CalculatedDoubleArrayValue is not null && ExpectedDoubleArrayValue is not null)
{
    <MudSimpleTable FixedHeader="true" Striped="true" Dense="true" Class="w-max max-h-full pointer-events-auto">
        <thead class="font-bold">
            <tr>
                <th>
                    Expected @ComparedValueName
                </th>
                <th class="font-bold">
                    Calculated @ComparedValueName
                </th>
                <th class="font-bold">
                    Difference
                </th>
            </tr>
        </thead>
        <tbody>
            @for (int i = 0; i < ExpectedDoubleArrayValue.Length; i++)
            {
                <tr>
                    <td>@ExpectedDoubleArrayValue[i]</td>
                    <td>@CalculatedDoubleArrayValue?.ElementAt(i)</td>
                    <th>
                        @(GetDifferenceOrNull(
                            ExpectedDoubleArrayValue[i],
                            CalculatedDoubleArrayValue?.ElementAt(i))?
                            .ToString() ?? "N/A")
                    </th>
                </tr>
            }
        </tbody>
    </MudSimpleTable>
}
else if (AssertionResultDoubleMatrix is not null)
{
    <MudGrid Class="w-max max-h-full pointer-events-auto m-0">
        <MudSimpleTable Dense="true" Class="w-max max-h-full pointer-events-auto">
            <thead class="font-bold">
                <tr>
                    <th colspan="@AssertionResultDoubleMatrix.ExpectedValue.GetLength(1)" class="justify-center center-content">
                        Expected @ComparedValueName
                    </th>
                </tr>
            </thead>
            <tbody>
                @for (int rowIndex = 0; rowIndex < AssertionResultDoubleMatrix.ExpectedValue.GetLength(0); rowIndex++)
                {
                    <tr>
                        @for (int colIndex = 0; colIndex < AssertionResultDoubleMatrix.ExpectedValue.GetLength(1); colIndex++)
                        {
                            <td class="!px-2 !py-0 border-none">
                                @AssertionResultDoubleMatrix.ExpectedValue[rowIndex, colIndex]
                            </td>
                        }
                    </tr>
                }
            </tbody>
        </MudSimpleTable>
        <MudSimpleTable Dense="true" Class="w-max max-h-full pointer-events-auto">
            <thead class="font-bold">
                <tr>
                    <th colspan="@AssertionResultDoubleMatrix.ExpectedValue.GetLength(1)" class="justify-center center-content">
                        Expected @ComparedValueName
                    </th>
                </tr>
            </thead>
            <tbody>
                @for (int rowIndex = 0; rowIndex < AssertionResultDoubleMatrix.ExpectedValue.GetLength(0); rowIndex++)
                {
                    <tr>
                        @for (int colIndex = 0; colIndex < AssertionResultDoubleMatrix.ExpectedValue.GetLength(1); colIndex++)
                        {
                            <td class="!px-2 !py-0 border-none">
                                @AssertionResultDoubleMatrix.ExpectedValue[rowIndex, colIndex]
                            </td>
                        }
                    </tr>
                }
            </tbody>
        </MudSimpleTable>
        <MudSimpleTable Dense="true" Class="w-max max-h-full pointer-events-auto">
            <thead class="font-bold">
                <tr>
                    <th colspan="@AssertionResultDoubleMatrix.ExpectedValue.GetLength(1)" class="justify-center center-content">
                        Expected @ComparedValueName
                    </th>
                </tr>
            </thead>
            <tbody>
                @for (int rowIndex = 0; rowIndex < AssertionResultDoubleMatrix.ExpectedValue.GetLength(0); rowIndex++)
                {
                    <tr>
                        @for (int colIndex = 0; colIndex < AssertionResultDoubleMatrix.ExpectedValue.GetLength(1); colIndex++)
                        {
                            <td class="!px-2 !py-0 border-none">
                                @AssertionResultDoubleMatrix.ExpectedValue[rowIndex, colIndex]
                            </td>
                        }
                    </tr>
                }
            </tbody>
        </MudSimpleTable>
    </MudGrid>
}
