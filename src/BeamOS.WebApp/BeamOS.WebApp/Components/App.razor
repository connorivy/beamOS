@using BeamOS.WebApp.Components.Providers
@using BeamOs.WebApp.Client.Components
@using Microsoft.Extensions.Configuration
@using BeamOS.WebApp.Client;
@using BeamOs.WebApp.Client.Components.Features.KeyBindings

@inject IConfiguration Configuration
@inject IRenderModeProvider RenderModeProvider

<Fluxor.Blazor.Web.StoreInitializer />

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <base href="/" />
    @* <link rel="stylesheet" href="css/tailwind.css" /> *@
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="stylesheet" href=@($"{Configuration[Constants.ASSEMBLY_NAME]}.styles.css") />
    <link href="_content/MudBlazor/MudBlazor.min.css" rel="stylesheet" />
    <link href="_content/CodeBeam.MudBlazor.Extensions/MudExtensions.min.css" rel="stylesheet" />

    @* https://github.com/MudBlazor/MudBlazor/issues/7805 *@
    <HeadOutlet @rendermode="RenderModeProvider.GlobalRenderMode" />
</head>

<body class="h-screen">
    <Routes @rendermode="RenderModeProvider.GlobalRenderMode" />
    <script src="_content/MudBlazor/MudBlazor.min.js"></script>
    <script src="_content/CodeBeam.MudBlazor.Extensions/MudExtensions.min.js"></script>
    <script src="_framework/blazor.web.js"></script>
    @* <script src="js/index.bundle.js"></script> *@
    <environment names="Development">
        <script src="/_framework/aspnetcore-browser-refresh.js"></script>
    </environment>

    @if (Configuration[Constants.EDITOR_USE_SERVED_CONFIG_NAME] == "True")
    {
        <script type="module">
            import { BeamOsEditor } from 'http://localhost:@Configuration[Constants.EDITOR_PORT_CONFIG_NAME]/lib/main.ts';

            // WARNING : the string "createEditorFromId" must match the string in EditorApiProxy.cs
            window.createEditorFromId = (editorId, dispatcher, isReadOnly) => {
                return BeamOsEditor.createFromId(editorId, dispatcher, isReadOnly)
            }
        </script>
    }
    else
    {
        <script type="module">
            import { BeamOsEditor } from 'https://cdn.jsdelivr.net/npm/beamos-editor@0.0.10/+esm';

            // WARNING : the string "createEditorFromId" must match the string in EditorApiProxy.cs
            window.createEditorFromId = (editorId, dispatcher, isReadOnly) => {
                return BeamOsEditor.createFromId(editorId, dispatcher, isReadOnly)
            }
        </script>
    }

    <script>
        function serializeEvent(e) {
            return {
                key: e.key,
                code: e.keyCode.toString(),
                location: e.location,
                repeat: e.repeat,
                ctrlKey: e.ctrlKey,
                shiftKey: e.shiftKey,
                altKey: e.altKey,
                metaKey: e.metaKey,
                type: e.type
            };
        }

        document.addEventListener('keydown', function (e) {
            DotNet.invokeMethodAsync('BeamOs.WebApp.Client.Components', "@(nameof(DocumentEvents.FireOnKeyDownEvent))", serializeEvent(e))
        });
    </script>

</body>

</html>
