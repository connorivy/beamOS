@using BeamOs.Tests.TestRunner
@rendermode InteractiveAuto

<MudNavMenu Class="p-4">
    <MudText Typo="Typo.h6" Class="px-4">My Application</MudText>
    <MudText Typo="Typo.body2" Class="px-4 mud-text-secondary">Secondary Text</MudText>
    <MudDivider Class="my-2" />
    <MudPaper Elevation="0">
        <MudList @bind-SelectedValue="selectedTestInfo">
            <MudListSubheader>
                <MudTextField @bind-Value="@searchTerm" AdornmentIcon="@Icons.Material.Filled.Brush"
                              Adornment="Adornment.End" Immediate="true" Variant="Variant.Outlined" />
            </MudListSubheader>

            @foreach (var testInfo in testInfos.Where(i => i.MethodInfo.Name.Contains(searchTerm.Trim(), StringComparison.OrdinalIgnoreCase)))
            {
                <MudListItem Icon="@Icons.Material.Filled.Folder" Value="@testInfo" >
                    @testInfo.MethodInfo.Name
                </MudListItem>
            }
            <MudListItem Text="Name" />
        </MudList>
    </MudPaper>
</MudNavMenu>

@code {
    bool open = true;
    string AlertAssignmentIcon { get; set; } = "<path d=\"M19,3A2,2 0 0,1 21,5V19A2,2 0 0,1 19,21H5A2,2 0 0,1 3,19V5A2,2 0 0,1 5,3H9.18C9.6,1.84 10.7,1 12,1C13.3,1 14.4,1.84 14.82,3H19M12,3A1,1 0 0,0 11,4A1,1 0 0,0 12,5A1,1 0 0,0 13,4A1,1 0 0,0 12,3M7,7V5H5V19H19V5H17V7H7M11,9H13V13.5H11V9M11,15H13V17H11V15Z\" />";
    string searchTerm = "";
    TestInfo[] testInfos = [];
    TestInfo? selectedTestInfo;
    protected override void OnInitialized()
    {
        testInfos = AssemblyScanning.GetAllTestInfo().ToArray();
        base.OnInitialized();
    }
}
