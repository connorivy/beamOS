@page "/test-explorer"
@inherits FluxorComponent

@using BeamOS.Tests.Common
@using BeamOS.Tests.Common.Interfaces
@using BeamOS.Tests.Common.SolvedProblems.Fixtures
@using BeamOS.Tests.Common.Traits
@using BeamOs.WebApp.Client.Components.Components
@using BeamOs.WebApp.Client.Components.Components.Editor
@using BeamOs.WebApp.Client.Components.Features.Editors.ReadOnlyEditor
@using BeamOs.WebApp.Client.Components.Features.Popovers
@using BeamOs.WebApp.Client.Components.Features.TestExplorer.Components
@using BeamOs.WebApp.Client.Components.Pages
@using BeamOs.ApiClient
@using BeamOs.Contracts.AnalyticalResults.Model
@using BeamOs.Contracts.Common
@using BeamOs.Contracts.PhysicalModel.Model
@using BeamOs.Contracts.PhysicalModel.Node
@using BeamOs.Domain.Common.ValueObjects
@using BeamOs.Tests.TestRunner
@using Fluxor
@using Fluxor.Blazor.Web.Components
@using MudExtensions

<PageTitle>Test Explorer</PageTitle>

<MudContainer MaxWidth="MaxWidth.False" Gutters="false" Class="h-full relative">
    @{
        var canvasId = this.readOnlyEditor?.CanvasId ?? ReadOnlyEditor.GetCanvasId();
    }

    <MudGrid Spacing="0" class="w-full m-0">
        <MudItem xs="12" lg="3" Class="py-0 pl-0 pr-4">
            @if (this.TestExplorerState.Value.SelectedProblemTests is null)
            {
                <ExampleModelSelectorComponent CanvasId="@canvasId" />
            }
            else
            {
                <div class="flex flex-col h-full gap-y-2">
                    <BackAndToggleButtonComponent />
                    @if (TestExplorerState.Value.ShowProblemSource && @TestExplorerState.Value.SelectedTestInfo?.SourceInfo is SourceInfo sourceInfo2)
                    {
                        <div class="w-full point-events-auto">
                            <SourceInfoView SourceInfo="@sourceInfo2" />
                        </div>
                    }
                    @if (TestExplorerState.Value.ShowTestSelector)
                    {
                        <TestSelector />
                    }
                </div>
            }
        </MudItem>
        <MudItem xs="12" lg="9" Class="p-0">
            <div class="flex flex-col h-fit gap-y-2">
                <ReadOnlyEditor @ref="readOnlyEditor" Class="min-h-[600px] h-full w-full z-0" CanvasId="@canvasId" />
                <TestResultDisplayComponent />
            </div>
        </MudItem>
    </MudGrid>

    @if (this.readOnlyEditor is not null && this.readOnlyEditor.EditorComponentState.SelectedObjects.Length > 0)
    {
        <MudPopover Open="@(readOnlyEditor.EditorComponentState.SelectedObjects.Length > 0)" Fixed="true" AnchorOrigin="Origin.TopRight" TransformOrigin="Origin.TopRight" Elevation="0" Class="w-80 p-2 bg-transparent">
            <SelectionInfoComponent SelectedObjects="@readOnlyEditor.EditorComponentState.SelectedObjects" ModelId="@readOnlyEditor.EditorComponentState.LoadedModelId"></SelectionInfoComponent>
        </MudPopover>
    }
    @* <TestExplorerNavigator CanvasId="@canvasId" /> *@
</MudContainer>
