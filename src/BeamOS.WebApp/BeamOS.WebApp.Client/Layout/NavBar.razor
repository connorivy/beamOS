@rendermode InteractiveAuto

@implements IDisposable

@inject NavigationManager NavigationManager

@*
<FluentHeader Class="siteheader">
    <Logo />
    <FluentSpacer />
    <div class="links">
        <FluentAnchor Appearance="Appearance.Lightweight"
                        Href="http://github.com/microsoft/fluentui-blazor" Target="_blank" Rel="noreferrer noopener"
                        title="FluentUI Blazor source on GitHub" aria-label="FluentUI Blazor Repo">
        </FluentAnchor>
        <AuthorizeView>
            <Authorized>
                <FluentAnchor Href="@logoutRef" Target="_blank" Appearance="Appearance.Lightweight">
                    <span class="bi bi-person-badge-nav-menu" aria-hidden="true"></span> Log Out @context.User.Identity?.Name
                </FluentAnchor>
            </Authorized>
            <NotAuthorized>
                <FluentAnchor Href="@logoutRef" Target="_blank" Appearance="Appearance.Lightweight">
                    <span class="bi bi-person-badge-nav-menu" aria-hidden="true"></span> Log In @context.User.Identity?.Name
                </FluentAnchor>
            </NotAuthorized>
        </AuthorizeView>
    </div>
</FluentHeader>
*@

<MudAppBar>
        <MudHidden Breakpoint="Breakpoint.SmAndDown">
            <MudIcon Icon="@Icons.Custom.Brands.MudBlazor" Size="Size.Large" />
        </MudHidden>
        <MudHidden Breakpoint="Breakpoint.MdAndUp">
            <MudIconButton Icon="@Icons.Material.Outlined.Menu" Color="Color.Inherit" Edge="Edge.Start" />
        </MudHidden>
        <MudHidden Breakpoint="Breakpoint.Xs">
            <MudText Typo="Typo.h6" Class="ml-4">Admin Dashboard</MudText>
        </MudHidden>
        <MudHidden Breakpoint="Breakpoint.Xs" Invert="true">
            <MudText Typo="Typo.subtitle2">Admin Dashboard</MudText>
        </MudHidden>
        <MudSpacer />
        <MudToggleIconButton
            @bind-Toggled:get="IsDarkMode"
            @bind-Toggled:set="ToggleDarkMode"
            Size="Size.Medium"
            Color="Color.Default"
            Icon="@Icons.Material.Rounded.LightMode"
            ToggledIcon="@Icons.Material.Rounded.DarkMode"
            Class="p-2 my-auto" />
        <MudMenu Icon="@Icons.Material.Outlined.Translate" Color="Color.Inherit" Direction="Direction.Bottom" OffsetY="true" Dense="true">
            <MudMenuItem>English</MudMenuItem>
            <MudMenuItem>Swedish</MudMenuItem>
            <MudMenuItem>Old Norse</MudMenuItem>
        </MudMenu>
        <MudMenu Icon="@Icons.Material.Outlined.Widgets" Color="Color.Inherit" Direction="Direction.Bottom" OffsetY="true" Dense="true">
            <MudMenuItem Link="https://mudblazor.com/">MudBlazor</MudMenuItem>
            <MudMenuItem Link="https://github.com/Garderoben/MudBlazor.Templates">Source Code</MudMenuItem>
        </MudMenu>
        <MudMenu Direction="Direction.Left" OffsetX="true" Dense="true" Class="mt-1 ml-4">
            <ActivatorContent>
                <MudAvatar />
            </ActivatorContent>
            <ChildContent>
                <MudDivider Class="mb-2" />
@*                 <MudListItem Text="Account" Icon="@Icons.Material.Outlined.Person" Href="/personal/account" />
                <MudListItem Text="Logout" Icon="@Icons.Material.Outlined.Login" Href="/pages/authentication/login" /> *@
            </ChildContent>
        </MudMenu>
    </MudAppBar>

@* <header class="bg-green-200 dark:bg-gray-900 sticky w-full z-20 top-0 start-0 border-b border-gray-100">
    <div class="relative flex flex-wrap items-center justify-between w-full bg-gray-100 group p-7 shrink-0">
        <Logo />
        <div class="items-center justify-between hidden gap-12 text-black md:flex">
            <a class="text-base font-bold text-dark-grey-700 hover:text-dark-grey-900" href="/">Home</a>
            <a class="text-base font-bold text-dark-grey-700 hover:text-dark-grey-900" href="/editor">Editor</a>
            <a class="text-base font-bold text-dark-grey-700 hover:text-dark-grey-900" href="/auth">Auth</a>
        </div>
        <div class="items-center hidden gap-8 md:flex">
            <AuthorizeView>
                <Authorized>
                    <div class="flex items-center text-sm font-normal text-black">
                        <NavLink class="nav-link" href="@logoutRef">
                            <span class="bi bi-person-badge-nav-menu" aria-hidden="true"></span> Log Out @context.User.Identity?.Name
                        </NavLink>
                    </div>
                </Authorized>
                <NotAuthorized>
                    <div class="flex items-center px-4 py-2 text-sm font-bold rounded-xl bg-indigo-100 text-indigo-600 hover:bg-indigo-600 hover:text-white transition duration-300">
                        <NavLink class="nav-link" href="@loginRef">
                            <span class="bi bi-person-badge-nav-menu" aria-hidden="true"></span> Log In
                        </NavLink>
                    </div>
                </NotAuthorized>
            </AuthorizeView>
        </div>
        <button onclick="(() => { this.closest('.group').classList.toggle('open')})()" class="flex md:hidden">
            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none">
                <path d="M3 8H21C21.2652 8 21.5196 7.89464 21.7071 7.70711C21.8946 7.51957 22 7.26522 22 7C22 6.73478 21.8946 6.48043 21.7071 6.29289C21.5196 6.10536 21.2652 6 21 6H3C2.73478 6 2.48043 6.10536 2.29289 6.29289C2.10536 6.48043 2 6.73478 2 7C2 7.26522 2.10536 7.51957 2.29289 7.70711C2.48043 7.89464 2.73478 8 3 8ZM21 16H3C2.73478 16 2.48043 16.1054 2.29289 16.2929C2.10536 16.4804 2 16.7348 2 17C2 17.2652 2.10536 17.5196 2.29289 17.7071C2.48043 17.8946 2.73478 18 3 18H21C21.2652 18 21.5196 17.8946 21.7071 17.7071C21.8946 17.5196 22 17.2652 22 17C22 16.7348 21.8946 16.4804 21.7071 16.2929C21.5196 16.1054 21.2652 16 21 16ZM21 11H3C2.73478 11 2.48043 11.1054 2.29289 11.2929C2.10536 11.4804 2 11.7348 2 12C2 12.2652 2.10536 12.5196 2.29289 12.7071C2.48043 12.8946 2.73478 13 3 13H21C21.2652 13 21.5196 12.8946 21.7071 12.7071C21.8946 12.5196 22 12.2652 22 12C22 11.7348 21.8946 11.4804 21.7071 11.2929C21.5196 11.1054 21.2652 11 21 11Z" fill="black"></path>
            </svg>
        </button>
        <div class="absolute flex md:hidden transition-all duration-300 ease-in-out flex-col items-start shadow-main justify-center w-full gap-3 overflow-hidden bg-white max-h-0 group-[.open]:py-4 px-4 rounded-2xl group-[.open]:max-h-64 top-full">
            <a class="text-sm font-normal text-dark-grey-700 hover:text-dark-grey-900" href="javascript:void(0)">Product</a>
            <a class="text-sm font-normal text-dark-grey-700 hover:text-dark-grey-900" href="javascript:void(0)">Features</a>
            <a class="text-sm font-normal text-dark-grey-700 hover:text-dark-grey-900" href="javascript:void(0)">Pricing</a>
            <a class="text-sm font-normal text-dark-grey-700 hover:text-dark-grey-900" href="javascript:void(0)">Company</a>
            <AuthorizeView>
                <Authorized>
                    <div class="nav-item px-3">
                        <form action="logout" method="post">
                            <AntiforgeryToken />
                            <input type="hidden" name="ReturnUrl" value="@currentUrl" />
                            <button type="submit" class="flex items-center text-sm font-normal text-black">Log In</button>
                        </form>
                    </div>
                </Authorized>
                <NotAuthorized>
                    <div class="flex items-center px-4 py-2 text-sm font-bold rounded-xl bg-indigo-100 text-indigo-600 hover:bg-indigo-600 hover:text-white transition duration-300">
                        <NavLink class="nav-link" href="login">
                            <span class="bi bi-person-badge-nav-menu" aria-hidden="true"></span> Login
                        </NavLink>
                    </div>
                </NotAuthorized>
            </AuthorizeView>
        </div>
    </div>
</header> *@


@code {
    [Parameter]
    public bool IsDarkMode { get; set; }
    [Parameter]
    public EventCallback<bool> IsDarkModeChanged { get; set; }

    async Task ToggleDarkMode(bool value)
    {
        this.IsDarkMode = value;
        await IsDarkModeChanged.InvokeAsync(value);
    }

    private string? currentUrl;

    private string logoutRef => $"logout?ReturnUrl={currentUrl}";
    private string loginRef => $"login?ReturnUrl={currentUrl}";

    protected override void OnInitialized()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }
}
