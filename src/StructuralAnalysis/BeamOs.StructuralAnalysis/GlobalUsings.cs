global using AngleContract = BeamOs.StructuralAnalysis.Contracts.Common.Angle;
global using AngleUnitContract = BeamOs.StructuralAnalysis.Contracts.Common.AngleUnit;
global using AreaContract = BeamOs.StructuralAnalysis.Contracts.Common.Area;
global using AreaMomentOfInertiaContract = BeamOs.StructuralAnalysis.Contracts.Common.AreaMomentOfInertia;
global using AreaMomentOfInertiaUnitContract = BeamOs.StructuralAnalysis.Contracts.Common.AreaMomentOfInertiaUnit;
global using AreaUnitContract = BeamOs.StructuralAnalysis.Contracts.Common.AreaUnit;
global using DeleteModelEntityProposalContract = BeamOs.StructuralAnalysis.Contracts.PhysicalModel.Models.DeleteModelEntityProposal;
global using Element1dProposalContract = BeamOs.StructuralAnalysis.Contracts.PhysicalModel.Element1ds.Element1dProposalBase;
global using ForceContract = BeamOs.StructuralAnalysis.Contracts.Common.Force;
global using ForcePerLengthContract = BeamOs.StructuralAnalysis.Contracts.Common.ForcePerLength;
global using ForcePerLengthUnitContract = BeamOs.StructuralAnalysis.Contracts.Common.ForcePerLengthUnit;
global using ForceUnitContract = BeamOs.StructuralAnalysis.Contracts.Common.ForceUnit;
global using InternalNodeContract = BeamOs.StructuralAnalysis.Contracts.PhysicalModel.Nodes.InternalNode;
global using LengthContract = BeamOs.StructuralAnalysis.Contracts.Common.Length;
global using LengthUnitContract = BeamOs.StructuralAnalysis.Contracts.Common.LengthUnit;
global using LoadCaseContract = BeamOs.StructuralAnalysis.Contracts.PhysicalModel.LoadCases.LoadCase;
global using LoadCombinationContract = BeamOs.StructuralAnalysis.Contracts.PhysicalModel.LoadCombinations.LoadCombination;
global using ModelProposalContract = BeamOs.StructuralAnalysis.Contracts.PhysicalModel.Models.ModelProposal;
global using ModelRepairOperationParametersContract = BeamOs.StructuralAnalysis.Contracts.PhysicalModel.Models.ModelRepairOperationParameters;
global using MomentLoadContract = BeamOs.StructuralAnalysis.Contracts.PhysicalModel.MomentLoads.MomentLoad;
global using NodeDefintionContract = BeamOs.StructuralAnalysis.Contracts.PhysicalModel.Nodes.NodeDefinition;
global using PointContract = BeamOs.StructuralAnalysis.Contracts.Common.Point;
global using PointLoadContract = BeamOs.StructuralAnalysis.Contracts.PhysicalModel.PointLoads.PointLoad;
global using PressureContract = BeamOs.StructuralAnalysis.Contracts.Common.Pressure;
global using PressureUnitContract = BeamOs.StructuralAnalysis.Contracts.Common.PressureUnit;
global using ProposalIssueContract = BeamOs.StructuralAnalysis.Contracts.PhysicalModel.Models.ProposalIssue;
global using RatioContract = BeamOs.StructuralAnalysis.Contracts.Common.Ratio;
global using RatioUnitContract = BeamOs.StructuralAnalysis.Contracts.Common.RatioUnit;
global using RestraintContract = BeamOs.StructuralAnalysis.Contracts.Common.Restraint;
global using ResultSetContract = BeamOs.StructuralAnalysis.Contracts.AnalyticalResults.ResultSet;
global using SectionProfileFromLibraryContract = BeamOs.StructuralAnalysis.Contracts.PhysicalModel.SectionProfiles.SectionProfileFromLibrary;
global using TorqueContract = BeamOs.StructuralAnalysis.Contracts.Common.Torque;
global using TorqueUnitContract = BeamOs.StructuralAnalysis.Contracts.Common.TorqueUnit;
global using UnitSettingsContract = BeamOs.StructuralAnalysis.Contracts.Common.UnitSettings;
global using VolumeContract = BeamOs.StructuralAnalysis.Contracts.Common.Volume;
global using VolumeUnitContract = BeamOs.StructuralAnalysis.Contracts.Common.VolumeUnit;
