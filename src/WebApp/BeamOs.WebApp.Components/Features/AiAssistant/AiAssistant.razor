@using Microsoft.AspNetCore.Components
@using MudBlazor

<div class="fixed bottom-6 right-6 z-50">
    @if (!expanded)
    {
        <MudButton @onclick="ToggleChat" Variant="Variant.Filled" Color="Color.Primary"
            Class="rounded-full w-14 h-14 min-w-0 shadow-lg">
            <MudIcon Icon="@Icons.Material.Filled.SmartToy" Size="Size.Large" />
        </MudButton>
    }
    else
    {
        <MudCard class="w-96 h-[500px] flex flex-col">
            <!-- Header -->
            <MudCardHeader Class="p-4">
                <MudText Typo="Typo.h6">AI Assistant</MudText>
                <MudSpacer />
                <MudIconButton Icon="@Icons.Material.Filled.Close" Color="Color.Inherit" OnClick="ToggleChat" />
            </MudCardHeader>

            <!-- Chat messages -->
            <MudCardContent Class="p-0" Style="height: calc(100% - 120px); overflow-y: auto;">
                @foreach (var message in chatMessages)
                {
                    <div class="@($"flex {(message.IsUser ? "justify-end" : "justify-start")}")">
                        @* <div class="@($"max-w-xs md:max-w-md rounded-lg px-4 py-2 {(message.IsUser ? "bg-primary text-white" : "bg-gray-100 dark:bg-gray-700")}")">
                            @message.Text
                        </div> *@
                        <MudPaper Style="@($"{(message.IsUser ? "" : "background-color: var(--mud-palette-primary);")}")"
                            Class="@($"ma-4 pa-4 d-inline-block")" Elevation="0" Width="auto" MaxWidth="80%">
                            <MudText Color="@(message.IsUser? Color.Inherit: Color.Default)">
                                @message.Text
                            </MudText>
                        </MudPaper>
                    </div>
                }

                @if (isLoading)
                {
                    <div class="text-left">
                        <MudPaper Class="ma-4 pa-4 d-inline-block bg-surface" Elevation="0">
                            <MudProgressCircular Size="Size.Medium" Indeterminate="true" />
                        </MudPaper>
                    </div>
                }
            </MudCardContent>

            <!-- Input area -->
            <div class="p-4 border-t border-gray-200 dark:border-gray-700 space-y-4">
                <!-- API Key Input - Always visible -->
                <div class="flex flex-row">
                    <MudTextField @bind-Value="apiKey" Label="API Key" Variant="Variant.Outlined"
                        InputType="InputType.Password" Class="w-full" />
                    <MudTooltip Text="Click here for instructions on creating a GitHub token with model:read permissions"
                        Placement="Placement.Left">
                        <MudIconButton Class="flex items-center h-full" Icon="@Icons.Material.Filled.Help"
                            Color="Color.Primary" Target="_blank"
                            Href="https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/managing-your-personal-access-tokens#creating-a-fine-grained-personal-access-token" />
                    </MudTooltip>
                </div>

                <!-- Message Input -->
                <div class="flex gap-2">
                    <MudTextField @bind-Value="userMessage" Label="Type your message..." Variant="Variant.Outlined"
                        Class="flex-1" OnKeyDown="@(async e => { if (e.Key == "Enter") await SendMessage(); })" />
                    <MudButton @onclick="SendMessage" Variant="Variant.Filled" Color="Color.Primary"
                        Disabled="@(string.IsNullOrWhiteSpace(userMessage) || string.IsNullOrWhiteSpace(apiKey))">
                        Send
                    </MudButton>
                </div>
            </div>
        </MudCard>
    }
</div>
<style>
    .force-scroll {
        scroll-behavior: smooth;
        overflow-anchor: auto;
    }
</style>