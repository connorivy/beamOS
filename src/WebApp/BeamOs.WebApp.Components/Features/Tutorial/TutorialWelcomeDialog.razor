@using MudBlazor

<MudDialog Style="width: 600px; height: 480px; max-width: 90vw; max-height: 90vh;">
    <DialogContent>
        <div class="flex flex-col h-full">
            <div class="flex-grow overflow-y-auto p-4 pb-16 relative">
                @* Step content above the stepper *@
                @if (activeStep == 0)
                {
                    <MudText Typo="Typo.h6" Class="mb-4">Welcome to BeamOS!</MudText>
                    <MudText Typo="Typo.body1" Class="mb-3">
                        This interactive tutorial will help you learn the basics of structural analysis with BeamOS.
                    </MudText>
                    <MudText Typo="Typo.body1" Class="mb-3">
                        You'll learn how to:
                    </MudText>
                    <MudList T="string" Dense="true">
                        <MudListItem T="string" Icon="@Icons.Material.Filled.Check">Create nodes and elements</MudListItem>
                        <MudListItem T="string" Icon="@Icons.Material.Filled.Check">Apply loads and constraints
                        </MudListItem>
                        <MudListItem T="string" Icon="@Icons.Material.Filled.Check">Run structural analysis</MudListItem>
                        <MudListItem T="string" Icon="@Icons.Material.Filled.Check">View and interpret results</MudListItem>
                    </MudList>
                }
                else if (activeStep == 1)
                {
                    <MudText Typo="Typo.h6" Class="mb-4">Creating Nodes</MudText>
                    <MudText Typo="Typo.body1">
                        Learn how to create structural nodes in your model.
                    </MudText>
                    <!-- Placeholder for future GIF -->
                }
                else if (activeStep == 2)
                {
                    <MudText Typo="Typo.h6" Class="mb-4">Adding Elements</MudText>
                    <MudText Typo="Typo.body1">
                        Connect nodes with structural elements.
                    </MudText>
                    <!-- Placeholder for future GIF -->
                }
                else if (activeStep == 3)
                {
                    <MudText Typo="Typo.h6" Class="mb-4">Applying Loads</MudText>
                    <MudText Typo="Typo.body1">
                        Add loads and constraints to your structure.
                    </MudText>
                    <!-- Placeholder for future GIF -->
                }
                else if (activeStep == 4)
                {
                    <MudText Typo="Typo.h6" Class="mb-4">Running Analysis</MudText>
                    <MudText Typo="Typo.body1">
                        Execute structural analysis on your model.
                    </MudText>
                    <!-- Placeholder for future GIF -->
                }
                else if (activeStep == 5)
                {
                    <MudText Typo="Typo.h6" Class="mb-4">Viewing Results</MudText>
                    <MudText Typo="Typo.body1">
                        Interpret and visualize the analysis results.
                    </MudText>
                    <!-- Placeholder for future GIF -->
                }
            </div>

            <div class="flex-none">
                <MudStepper NonLinear ActiveIndex="@activeStep" ActiveIndexChanged="OnActiveStepChanged" Elevation="0"
                    Class="w-full" Style="min-height:60px;">
                    <TitleTemplate>@*This empty template prevents rendering the title*@</TitleTemplate>
                    <LabelTemplate>
                        @if (context.IsActive)
                        {
                            <MudIcon Icon="@Icons.Material.Filled.Circle" Style="rotate: 90deg;"
                                Color="context.Completed ? Color.Success : Color.Primary"></MudIcon>
                        }
                        else if (context.Completed)
                        {
                            <div
                                style="height: 10px; width:10px; background-color: var(--mud-palette-success); border-radius: 50%;">
                            </div>
                        }
                        else
                        {
                            <div style="height: 10px; width:10px; background-color: #d4ddeb; border-radius: 50%;"></div>
                        }
                    </LabelTemplate>
                    <ChildContent>
                        <MudStep Title="Welcome" />
                        <MudStep Title="Creating Nodes" />
                        <MudStep Title="Adding Elements" />
                        <MudStep Title="Applying Loads" />
                        <MudStep Title="Running Analysis" />
                        <MudStep Title="Viewing Results" />
                    </ChildContent>
                </MudStepper>
            </div>
        </div>
    </DialogContent>
</MudDialog>

@code {
    [CascadingParameter]
    private IMudDialogInstance? MudDialog { get; set; }

    private int activeStep = 0;

    private void GoNext()
    {
        if (activeStep < 5)
            activeStep++;
    }

    private void GoBack()
    {
        if (activeStep > 0)
            activeStep--;
    }

    private void OnActiveStepChanged(int idx)
    {
        activeStep = idx;
    }

    private void Close() => MudDialog?.Close();
}