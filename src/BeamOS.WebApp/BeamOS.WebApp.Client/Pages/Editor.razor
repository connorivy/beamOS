@page "/editor"
@using BeamOS.WebApp.Client.Components.Editor
@using BeamOS.WebApp.Client.Features.Common.Flux
@using BeamOS.WebApp.Client.Repositories
@using BeamOs.CodeGen.Apis.EditorApi
@using BeamOs.ApiClient
@using BeamOs.Contracts.AnalyticalResults.Model
@using BeamOs.Contracts.Common
@using BeamOs.Contracts.PhysicalModel.Model
@using BeamOs.Contracts.PhysicalModel.Node
@using Fluxor.Blazor.Web.Components
@using static BeamOS.WebApp.Client.Components.Editor.EditorComponent
@using BeamOS.WebApp.Client.Components.Editor.CommandHandlers;

@rendermode InteractiveAuto

@inherits FluxorComponent

<PageTitle>Editor</PageTitle>

<MudDrawerContainer Class="h-full w-full">
    @if (editorComponent is not null)
    {
        <MudPopover Open="@(editorComponent.EditorComponentState.SelectedObjects.Length > 0)" Fixed="true" Class="m-2">
            <SelectionInfoComponent SelectedObjects="@editorComponent.EditorComponentState.SelectedObjects" ModelId="@editorComponent.EditorComponentState.LoadedModelId"></SelectionInfoComponent>
        </MudPopover>
    }
    <EditorComponent Class="h-full" @ref="editorComponent"></EditorComponent>
</MudDrawerContainer>

@code {
    private EditorComponent editorComponent;

    protected override void OnInitialized()
    {
        EventEmitter.VisibleStateChanged += this.EventEmitter_VisibleStateChanged;
        base.OnInitialized();
    }

    private void EventEmitter_VisibleStateChanged(object? sender, EventArgs _) =>
        this.StateHasChanged();
}
